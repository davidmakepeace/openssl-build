name: macOS OpenSSL
on:
  workflow_dispatch:
  pull_request:
    paths:
      - '.github/workflows/build-macos-openssl.yml'
      # Contains the OpenSSL version we'll build
      - 'openssl-version.sh'
  push:
    branches:
      - main
    paths:
      - '.github/workflows/build-macos-openssl.yml'
      # Contains the OpenSSL version we'll build
      - 'openssl-version.sh'

jobs:
  build:
    runs-on: macos-13
    strategy:
      matrix:
        ARCH:
          - NAME: x86_64
            ARTIFACT_NAME: x86-64
            CFLAGS: "-mmacosx-version-min=13.0"
          - NAME: arm64
            ARTIFACT_NAME: arm64
            CFLAGS: "-mmacosx-version-min=13.0"
    name: "Build OpenSSL for macOS (${{ matrix.ARCH.NAME }})"
    steps:
      - uses: actions/checkout@v2.3.4
      - name: Download OpenSSL
        run: |
          source ./openssl-version.sh
          curl -L -o openssl.tar.gz https://github.com/openssl/openssl/releases/download/$OPENSSL_VERSION/$OPENSSL_VERSION.tar.gz
          shasum -a 256 -c <<< "$OPENSSL_SHA256 *openssl.tar.gz"
      - name: Extract OpenSSL
        run: |
          tar zxf openssl.tar.gz
      - name: Build OpenSSL
        run: |
          set -x
          source ./openssl-version.sh
          mkdir artifact artifact/ssl
          BASEDIR=$(pwd)
          cd openssl*
          perl ./Configure \
              --prefix="${BASEDIR}/artifact" \
              darwin64-${{ matrix.ARCH.NAME }}-cc \
              $OPENSSL_BUILD_FLAGS
          make -j$(sysctl -n hw.logicalcpu)
          make install_sw install_fips
        env:
          CFLAGS: ${{ matrix.ARCH.CFLAGS }}

      - uses: actions/upload-artifact@v4
        with:
          name: "openssl-macos-${{ matrix.ARCH.ARTIFACT_NAME }}"
          path: artifact/

  universal2:
    runs-on: macos-13
    name: "Build OpenSSL for macOS universal2"
    needs: [ build ]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: openssl-macos-x86-64
          path: x86-64
      - uses: actions/download-artifact@v4
        with:
          name: openssl-macos-arm64
          path: arm64
      - name: Create universal2 OpenSSL
        run: |
          mkdir artifact
          cd artifact
          mkdir -p bin lib lib/ossl-modules ssl
          cp -r ../x86-64/include .
          cp -r ../x86-64/lib/pkgconfig lib/
          cp ../x86-64/bin/c_rehash bin/  # c_rehash is a perl script
          lipo -create -output bin/openssl ../x86-64/bin/openssl ../arm64/bin/openssl
          lipo -create -output lib/libssl.a ../x86-64/lib/libssl.a ../arm64/lib/libssl.a
          lipo -create -output lib/libcrypto.a ../x86-64/lib/libcrypto.a ../arm64/lib/libcrypto.a
          lipo -create -output lib/ossl-modules/fips.dylib ../x86-64/lib/ossl-modules/fips.dylib ../arm64/lib/ossl-modules/fips.dylib
          chmod +x bin/openssl
          bin/openssl fipsinstall -out ssl/fipsmodule.cnf -module lib/ossl-modules/fips.dylib
      - uses: actions/upload-artifact@v4
        with:
          name: "openssl-macos-universal2"
          path: artifact/
